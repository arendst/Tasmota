[tasmota]
; Reset global build / unbuild compile time flags for ALL Tasmota / Tasmota32 [env]
; since custom env are designed to enable options individual
build_unflags               =
build_flags                 =

[env:tasmota-rangeextender]
build_flags                 = ${env.build_flags}
                              -DFIRMWARE_RANGE_EXTENDER
                              -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
                              -DUSE_WIFI_RANGE_EXTENDER
                              -DUSE_WIFI_RANGE_EXTENDER_NAPT
                              -DOTA_URL='""'

[env:tasmota32-rangeextender]
extends                     = env:tasmota32_base
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_TASMOTA32
                              -DUSE_WIFI_RANGE_EXTENDER
                              -DUSE_WIFI_RANGE_EXTENDER_NAPT
                              -DOTA_URL='""'

; remove PSRAM support -> avoid "blinking" of GPIO 16/17 at boot
[env:tasmota32-nopsram]
extends                     = env:tasmota32
build_unflags               = ${env:tasmota32_base.build_unflags}
                              -DBOARD_HAS_PSRAM
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_TASMOTA32
                              -DDISABLE_PSRAMCHECK
                              -DCODE_IMAGE_STR='"tasmota32-nopsram"'
                              -DOTA_URL='""'

[env:tasmota32s3-file]
extends                     = env:tasmota32_base
board                       = esp32s3-qio_qspi
board_build.f_cpu           = 240000000L
board_build.f_flash         = 80000000L
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_TASMOTA32
                              -DOTA_URL='"http://ota.tasmota.com/tasmota32/release/tasmota32s3.bin"'
; Example for custom file upload in Tasmota Filesystem
custom_files_upload         = ${env:tasmota32_base.custom_files_upload}
                              tasmota/berry/modules/Partition_Wizard.tapp
                              https://github.com/tasmota/autoconf/raw/main/esp32s3/DevKitC-1.autoconf

[env:tasmota32s3-qio_opi-all]
extends                     = env:tasmota32_base
board                       = esp32s3-qio_opi
board_build.f_cpu           = 240000000L
board_build.f_flash         = 80000000L
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DUSE_WEBCAM
                              -DUSE_BERRY_ULP
                              -DFIRMWARE_LVGL
                              -DUSE_LVGL_OPENHASP
                              -DOTA_URL='""'

[env:tasmota32s3-qio_opi_120]
; device needs >= 8MB Flash!!
extends                     = env:tasmota32_base
board                       = esp32s3-qio_opi_120
board_build.partitions      = partitions/esp32_partition_app3904k_fs3392k.csv
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DUSE_BERRY_ULP
                              -DFIRMWARE_LVGL
                              -DUSE_LVGL_OPENHASP
                              -DOTA_URL='""'

[env:tasmota32-WPA3_SAE]
; Arduino libs with WiFi Enterprise support
extends                     = env:tasmota32_base
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_TASMOTA32
                              -DOTA_URL='""'
lib_ignore                  = Micro-RTSP
custom_sdkconfig            = CONFIG_ESP_WIFI_ENTERPRISE_SUPPORT=y
                              CONFIG_WIFI_AUTH_WPA2_ENTERPRISE=y
                              CONFIG_WIFI_AUTH_WPA3_ENTERPRISE=y
                              CONFIG_WIFI_AUTH_WPA2_WPA3_ENTERPRISE=y
                              CONFIG_ESP_WIFI_ENABLE_WPA3_SAE=y
                              CONFIG_ESP_WIFI_ENABLE_WPA3_OWE_STA=y

[env:tasmota32s3-qio_opi_per]
; device needs >= 8MB Flash!! Hybrid compile for max. performance when using Displays
extends                     = env:tasmota32_base
board                       = esp32s3-qio_opi_120
board_build.partitions      = partitions/esp32_partition_app3904k_fs3392k.csv
board_upload.flash_size     = 8MB
board_upload.maximum_size   = 8388608
build_unflags               = ${env:tasmota32_base.build_unflags}
                              -Os
                              -ffunction-sections
build_flags                 = ${env:tasmota32_base.build_flags}
                              -Ofast
                              -mtext-section-literals
                              -DUSE_BERRY_ULP
                              -DFIRMWARE_LVGL
                              -DUSE_LVGL_OPENHASP
                              -DOTA_URL='""'
custom_sdkconfig            = '# CONFIG_COMPILER_OPTIMIZATION_SIZE is not set'
                              CONFIG_COMPILER_OPTIMIZATION_PERF=y
                              '# CONFIG_ESP_DEBUG_INCLUDE_OCD_STUB_BINS is not set'
                              '# CONFIG_LWIP_PPP_SUPPORT is not set'
                              '# SPI_FLASH_ENABLE_ENCRYPTED_READ_WRITE is not set'
                              CONFIG_SPIRAM_MODE_OCT=y
                              CONFIG_SPIRAM_SPEED_120M=y
                              CONFIG_SPIRAM_IGNORE_NOTFOUND=y
                              '# CONFIG_SPIRAM_MEMTEST is not set'
                              CONFIG_LCD_RGB_ISR_IRAM_SAFE=y
                              CONFIG_GDMA_CTRL_FUNC_IN_IRAM=y
                              CONFIG_I2S_ISR_IRAM_SAFE=y
                              CONFIG_GDMA_ISR_IRAM_SAFE=y
                              CONFIG_SPIRAM_XIP_FROM_PSRAM=y
                              CONFIG_SPIRAM_FETCH_INSTRUCTIONS=y
                              CONFIG_SPIRAM_RODATA=y
                              CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240=y
                              CONFIG_ESP32S3_DATA_CACHE_64KB=y
                              CONFIG_ESP32S3_DATA_CACHE_LINE_64B=y

[env:tasmota32c2-no-NAPT]
; Hybrid compile: No IDF BT support, disabled PPP, Ethernet and NAPT
extends                     = env:tasmota32_base
board                       = esp32c2
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_TASMOTA32
                              -DOTA_URL='"http://ota.tasmota.com/tasmota32/release/tasmota32c2.bin"'
lib_ignore                  = ${env:tasmota32_base.lib_ignore}
                               Micro-RTSP
custom_sdkconfig            = 
                              '# CONFIG_BT_ENABLED is not set'
                              '# CONFIG_BT_NIMBLE_ENABLED is not set'
                              '# CONFIG_BT_CONTROLLER_ENABLED is not set'
                              CONFIG_BT_CONTROLLER_DISABLED=y
                              '# CONFIG_LWIP_IP_FORWARD is not set'
                              '# CONFIG_LWIP_IPV4_NAPT is not set'
                              '# CONFIG_LWIP_IPV4_NAPT_PORTMAP is not set'
                              '# CONFIG_ETH_ENABLED is not set'
                              '# CONFIG_ETH_USE_SPI_ETHERNET is not set'
                              '# CONFIG_ETH_TRANSMIT_MUTEX is not set'
                              '# CONFIG_ETH_SPI_ETHERNET_DM9051 is not set'
                              '# CONFIG_ETH_SPI_ETHERNET_W5500 is not set'
                              '# CONFIG_ETH_SPI_ETHERNET_KSZ8851SNL is not set'
                              '# CONFIG_LWIP_PPP_SUPPORT is not set'
; disable not needed IDF managed components for Arduino libs compile
custom_component_remove     = espressif/esp_hosted
                              espressif/esp_wifi_remote
                              espressif/esp_modem
; add IDF component from espressif registry for Arduino libs compile
custom_component_add        = espressif/esp-dsp @ ^1.5.2

[env:tasmota32s3-opi_opi]
extends                     = env:tasmota32_base
board                       = esp32s3-opi_opi
board_build.f_cpu           = 240000000L
board_build.f_flash         = 80000000L
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DUSE_BERRY_ULP
                              -DFIRMWARE_LVGL
                              -DUSE_LVGL_OPENHASP
                              -DOTA_URL='""'

[env:tasmota32c3-bluetooth]
extends                     = env:tasmota32_base
board                       = esp32c3
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_BLUETOOTH
;                              -DUSE_EQ3_ESP32
                              -DOTA_URL='""'
lib_extra_dirs              = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_rf, lib/lib_div, lib/lib_ssl, lib/lib_display, lib/lib_audio
lib_ignore                  = Micro-RTSP

[env:tasmota32s3-bluetooth]
extends                     = env:tasmota32_base
board                       = esp32s3-qio_qspi
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_BLUETOOTH
                              -DOTA_URL='""'
lib_extra_dirs              = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_ssl, lib/lib_i2c
lib_ignore                  = Micro-RTSP

[env:tasmota32-mi32]
extends                     = env:tasmota32_base
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_BLUETOOTH
                              -DUSE_MI_EXT_GUI
                              -DCONFIG_BT_NIMBLE_NVS_PERSIST=y
                              -DOTA_URL='""'
lib_extra_dirs              = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_div, lib/lib_ssl
lib_ignore                  = Micro-RTSP

[env:tasmota32c3-mi32]
extends                     = env:tasmota32_base
board                       = esp32c3
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_BLUETOOTH
                              -DUSE_MI_EXT_GUI
                              -DCONFIG_BT_NIMBLE_NVS_PERSIST=y
                              -DOTA_URL='""'
lib_extra_dirs              = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_div, lib/lib_ssl
lib_ignore                  = Micro-RTSP

[env:tasmota32s3-mi32]
extends                     = env:tasmota32_base
board                       = esp32s3-qio_qspi
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_BLUETOOTH
                              -DUSE_MI_EXT_GUI
                              -DCONFIG_BT_NIMBLE_NVS_PERSIST=y
                              -DOTA_URL='""'
lib_extra_dirs              = lib/libesp32, lib/libesp32_div, lib/lib_basic, lib/lib_i2c, lib/lib_div, lib/lib_ssl
lib_ignore                  = Micro-RTSP

[env:tasmota32c6-mi32]
extends                     = env:tasmota32_base
board                       = esp32c6
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DFIRMWARE_BLUETOOTH
                              -DUSE_MI_EXT_GUI
                              -DCONFIG_BT_NIMBLE_NVS_PERSIST=y
                              -DOTA_URL='""'

; *** Debug version used for PlatformIO Home Project Inspection
[env:tasmota-debug]
build_type                  = debug
build_unflags               = ${env.build_unflags}
check_tool                  = cppcheck
                              ;clangtidy
check_skip_packages         = yes
build_flags                 = ${env.build_flags}
;                              -Wstack-usage=300
                              -DOTA_URL='""'

[env:tasmota32-debug]
extends                     = env:tasmota32_base
build_type                  = debug
build_unflags               = ${env:tasmota32_base.build_unflags}
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DOTA_URL='""'
check_tool                  = cppcheck
                              ;clangtidy
check_skip_packages         = yes


; *** JTAG Debug version, needs esp-prog or FT2232H or FT232H
; *** Install howto for Windows https://community.platformio.org/t/esp32-pio-unified-debugger/4541/20

[env:tasmota32-ocd]
build_type                  = debug
extends                     = env:tasmota32_base
board                       = esp32
debug_tool                  = esp-prog
upload_protocol             = esp-prog
debug_init_break            = tbreak setup
build_unflags               = ${env:tasmota32_base.build_unflags}
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DOTA_URL='""'

[env:tasmota32solo1-ocd]
build_type                  = debug
extends                     = env:tasmota32solo1
board                       = esp32-solo1
debug_tool                  = esp-prog
upload_protocol             = esp-prog
debug_init_break            = tbreak setup
build_unflags               = ${env:tasmota32_base.build_unflags}
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DOTA_URL='""'
custom_sdkconfig            = CONFIG_FREERTOS_UNICORE=y

[env:tasmota32s2-ocd]
build_type                  = debug
extends                     = env:tasmota32_base
board                       = esp32s2
debug_tool                  = esp-prog
upload_protocol             = esp-prog
debug_init_break            = tbreak setup
build_unflags               = ${env:tasmota32_base.build_unflags}
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DOTA_URL='""'

; *** JTAG Debug versions (only C3/S3), uses inbuilt CDC/jtag. No extra jtag hardware required!

[env:tasmota32s3-ocd]
build_type                  = debug
extends                     = env:tasmota32s3
board                       = esp32s3-qio_opi
debug_tool                  = esp-builtin
upload_protocol             = esp-builtin
debug_init_break            = tbreak setup
build_unflags               = ${env:tasmota32_base.build_unflags}
build_flags                 = ${env:tasmota32_base.build_flags}
                              -DOTA_URL='""'

[env:tasmota32c3-ocd]
build_type                  = debug
extends                     = env:tasmota32c3
board                       = esp32c3
debug_tool                  = esp-builtin
upload_protocol             = esp-builtin
debug_init_break            = tbreak setup
build_unflags               = ${env:tasmota32c3.build_unflags}
build_flags                 = ${env:tasmota32c3.build_flags}
                              -DOTA_URL='""'
